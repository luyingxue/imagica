[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ai-image-generator"
version = "2.0.0"
description = "基于 CustomTkinter 和 OpenAI API 的轻量级图像生成器"
readme = "README.md"
requires-python = ">=3.7"
license = {file = "LICENSE"}
authors = [
    {name = "AI Image Generator Team", email = "contact@example.com"},
]
maintainers = [
    {name = "AI Image Generator Team", email = "contact@example.com"},
]
keywords = [
    "ai", "image", "generator", "openai", "dall-e", "customtkinter",
    "gui", "desktop", "application", "art", "creative"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: X11 Applications",
    "Environment :: MacOS X",
    "Environment :: Win32 (MS Windows)",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: User Interfaces",
    "Typing :: Typed",
]
dependencies = [
    "customtkinter>=5.2.0,<6.0.0",
    "requests>=2.28.0,<3.0.0",
    "Pillow>=9.5.0,<11.0.0",
    "openai>=1.0.0,<2.0.0",
    "typing-extensions>=4.5.0,<5.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0,<8.0.0",
    "pytest-cov>=4.1.0,<5.0.0",
    "pytest-mock>=3.11.0,<4.0.0",
    "black>=23.0.0,<24.0.0",
    "flake8>=6.0.0,<7.0.0",
    "isort>=5.12.0,<6.0.0",
    "mypy>=1.5.0,<2.0.0",
    "pre-commit>=3.3.0,<4.0.0",
]
build = [
    "pyinstaller>=5.13.0,<6.0.0",
]
docs = [
    "mkdocs>=1.5.0,<2.0.0",
    "mkdocs-material>=9.1.0,<10.0.0",
]

[project.urls]
Homepage = "https://github.com/your-username/ai-image-generator"
Documentation = "https://github.com/your-username/ai-image-generator#readme"
Repository = "https://github.com/your-username/ai-image-generator.git"
Changelog = "https://github.com/your-username/ai-image-generator/blob/main/CHANGELOG.md"
"Bug Tracker" = "https://github.com/your-username/ai-image-generator/issues"

[project.scripts]
ai-image-generator = "main:main"

# Black配置
[tool.black]
line-length = 100
target-version = ['py37', 'py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
^/(
  (
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.pytest_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | release
  )/
)
'''

# isort配置
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["build/*", "dist/*", "*.egg-info/*"]

# mypy配置
[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "customtkinter.*",
    "PIL.*",
    "openai.*",
]
ignore_missing_imports = true

# pytest配置
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "api: marks tests as API tests",
    "ui: marks tests as UI tests",
]

# Coverage配置
[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/env/*",
    "setup.py",
    "build_*.py",
    "*/site-packages/*",
    "release/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov" 